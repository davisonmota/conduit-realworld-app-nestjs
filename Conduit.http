# Conduit

###
# group: Auth
# @name Register
POST {{APIURL}}/users
Content-Type: application/json
X-Requested-With: XMLHttpRequest

{"user":{"email":"{{EMAIL}}", "password":"{{PASSWORD}}", "username":"{{USERNAME}}"}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // if (!(environment.isIntegrationTest)) {
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "user" property'] = responseJSON.hasOwnProperty('user');
  //
  // var user = responseJSON.user || {};
  //
  // tests['User has "email" property'] = user.hasOwnProperty('email');
  // tests['User has "username" property'] = user.hasOwnProperty('username');
  // tests['User has "bio" property'] = user.hasOwnProperty('bio');
  // tests['User has "image" property'] = user.hasOwnProperty('image');
  // tests['User has "token" property'] = user.hasOwnProperty('token');
  // }
  //
%}

###
# group: Auth
# @name Login
POST {{APIURL}}/users/login
Content-Type: application/json
X-Requested-With: XMLHttpRequest

{"user":{"email":"{{EMAIL}}", "password":"{{PASSWORD}}"}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "user" property'] = responseJSON.hasOwnProperty('user');
  //
  // var user = responseJSON.user || {};
  //
  // tests['User has "email" property'] = user.hasOwnProperty('email');
  // tests['User has "username" property'] = user.hasOwnProperty('username');
  // tests['User has "bio" property'] = user.hasOwnProperty('bio');
  // tests['User has "image" property'] = user.hasOwnProperty('image');
  // tests['User has "token" property'] = user.hasOwnProperty('token');
  //
%}

###
# group: Auth
# @name Login and Remember Token
POST http://localhost:3000/users/login
Content-Type: application/json
X-Requested-With: XMLHttpRequest

{"user":{"email":"emai", "password":"PASSWORD"}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "user" property'] = responseJSON.hasOwnProperty('user');
  //
  // var user = responseJSON.user || {};
  //
  // tests['User has "email" property'] = user.hasOwnProperty('email');
  // tests['User has "username" property'] = user.hasOwnProperty('username');
  // tests['User has "bio" property'] = user.hasOwnProperty('bio');
  // tests['User has "image" property'] = user.hasOwnProperty('image');
  // tests['User has "token" property'] = user.hasOwnProperty('token');
  //
  // if(tests['User has "token" property']){
  //     pm.globals.set('token', user.token);
  // }
  //
  // tests['Global variable "token" has been set'] = pm.globals.get('token') === user.token;
  //
%}

###
# group: Auth
# @name Current User
GET {{APIURL}}/user
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "user" property'] = responseJSON.hasOwnProperty('user');
  //
  // var user = responseJSON.user || {};
  //
  // tests['User has "email" property'] = user.hasOwnProperty('email');
  // tests['User has "username" property'] = user.hasOwnProperty('username');
  // tests['User has "bio" property'] = user.hasOwnProperty('bio');
  // tests['User has "image" property'] = user.hasOwnProperty('image');
  // tests['User has "token" property'] = user.hasOwnProperty('token');
  //
%}

###
# group: Auth
# @name Update User
PUT {{APIURL}}/user
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{"user":{"email":"{{EMAIL}}"}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "user" property'] = responseJSON.hasOwnProperty('user');
  //
  // var user = responseJSON.user || {};
  //
  // tests['User has "email" property'] = user.hasOwnProperty('email');
  // tests['User has "username" property'] = user.hasOwnProperty('username');
  // tests['User has "bio" property'] = user.hasOwnProperty('bio');
  // tests['User has "image" property'] = user.hasOwnProperty('image');
  // tests['User has "token" property'] = user.hasOwnProperty('token');
  //
%}

###
# group: Articles
# @name All Articles
GET http://localhost:3000/articles
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles
# @name Articles by Author
GET http://localhost:3000/articles?
    author=johnjacob
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles
# @name Articles Favorited by Username
GET {{APIURL}}/articles?
    favorited={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles
# @name Articles by Tag
GET {{APIURL}}/articles?
    tag=dragons
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Create Article
POST {{APIURL}}/articles
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{
  "article": {
    "title": "How to train your dragon",
    "description": "Ever wonder how?",
    "body": "Very carefully.",
    "tagList": [
      "training",
      "dragons"
    ]
  }
}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
  //
  // var article = responseJSON.article || {};
  //
  // tests['Article has "title" property'] = article.hasOwnProperty('title');
  // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  // pm.globals.set('slug', article.slug);
  //
  // tests['Article has "body" property'] = article.hasOwnProperty('body');
  // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  // tests['Article has "description" property'] = article.hasOwnProperty('description');
  // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  // tests['Article has "author" property'] = article.hasOwnProperty('author');
  // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //
%}

###
# group: Articles, Favorite, Comments
# @name Feed
GET {{APIURL}}/articles/feed
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name All Articles
GET {{APIURL}}/articles
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name All Articles with auth
GET {{APIURL}}/articles
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Articles by Author
GET {{APIURL}}/articles?
    author={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Articles by Author with auth
GET {{APIURL}}/articles?
    author={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //
  //     if(responseJSON.articles.length){
  //         var article = responseJSON.articles[0];
  //
  //         tests['Article has "title" property'] = article.hasOwnProperty('title');
  //         tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //         tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //         tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //         tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //         tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //         tests['Article has "description" property'] = article.hasOwnProperty('description');
  //         tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //         tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //         tests['Article has "author" property'] = article.hasOwnProperty('author');
  //         tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //         tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //         tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //     } else {
  //         tests['articlesCount is 0 when feed is empty'] = responseJSON.articlesCount === 0;
  //     }
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Single Article by slug
GET {{APIURL}}/articles/{{slug}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
  //
  // var article = responseJSON.article || {};
  //
  // tests['Article has "title" property'] = article.hasOwnProperty('title');
  // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  // tests['Article has "body" property'] = article.hasOwnProperty('body');
  // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  // tests['Article has "description" property'] = article.hasOwnProperty('description');
  // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  // tests['Article has "author" property'] = article.hasOwnProperty('author');
  // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  //
%}

###
# group: Articles, Favorite, Comments
# @name Articles by Tag
GET {{APIURL}}/articles?
    tag=dragons
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //     var article = responseJSON.articles[0];
  //     tests['An article was returned'] = article !== undefined;
  //     tests['Article has "title" property'] = article.hasOwnProperty('title');
  //     tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //     tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //     tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //     tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //     tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //     tests['Article has "description" property'] = article.hasOwnProperty('description');
  //     tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //     tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //     tests['The first tag is dragons'] = article.tagList[0] === 'dragons';
  //     tests['The second tag is training'] = article.tagList[1] === 'training';
  //     tests['Article has "author" property'] = article.hasOwnProperty('author');
  //     tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //     tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //     tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Update Article
PUT {{APIURL}}/articles/{{slug}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{
  "article": {
    "body": "With two hands"
  }
}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // if (!(environment.isIntegrationTest)) {
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
  //
  // var article = responseJSON.article || {};
  //
  // tests['Article has "title" property'] = article.hasOwnProperty('title');
  // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  // tests['Article has "body" property'] = article.hasOwnProperty('body');
  // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  // tests['Article has "description" property'] = article.hasOwnProperty('description');
  // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  // tests['Article has "author" property'] = article.hasOwnProperty('author');
  // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Favorite Article
POST {{APIURL}}/articles/{{slug}}/favorite
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
  //
  // var article = responseJSON.article || {};
  //
  // tests['Article has "title" property'] = article.hasOwnProperty('title');
  // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  // tests['Article has "body" property'] = article.hasOwnProperty('body');
  // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  // tests['Article has "description" property'] = article.hasOwnProperty('description');
  // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  // tests['Article has "author" property'] = article.hasOwnProperty('author');
  // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  // tests["Article's 'favorited' property is true"] = article.favorited === true;
  // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  // tests["Article's 'favoritesCount' property is greater than 0"] = article.favoritesCount > 0;
  //
%}

###
# group: Articles, Favorite, Comments
# @name Articles Favorited by Username
GET {{APIURL}}/articles?
    favorited={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //     article = responseJSON.articles[0];
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //     tests['Article has "title" property'] = article.hasOwnProperty('title');
  //     tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //     tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //     tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //     tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //     tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //     tests['Article has "description" property'] = article.hasOwnProperty('description');
  //     tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //     tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //     tests['Article has "author" property'] = article.hasOwnProperty('author');
  //     tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //     tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //     tests['favoritesCount is 1'] = article.favoritesCount === 1;
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Articles Favorited by Username with auth
GET {{APIURL}}/articles?
    favorited={{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //     article = responseJSON.articles[0];
  //     tests['Response contains "articles" property'] = responseJSON.hasOwnProperty('articles');
  //     tests['Response contains "articlesCount" property'] = responseJSON.hasOwnProperty('articlesCount');
  //     tests['articlesCount is an integer'] = Number.isInteger(responseJSON.articlesCount);
  //     tests['Article has "title" property'] = article.hasOwnProperty('title');
  //     tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  //     tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  //     tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  //     tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  //     tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  //     tests['Article has "description" property'] = article.hasOwnProperty('description');
  //     tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  //     tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  //     tests['Article has "author" property'] = article.hasOwnProperty('author');
  //     tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  //     tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  //     tests['favoritesCount is 1'] = article.favoritesCount === 1;
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Unfavorite Article
DELETE {{APIURL}}/articles/{{slug}}/favorite
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "article" property'] = responseJSON.hasOwnProperty('article');
  //
  // var article = responseJSON.article || {};
  //
  // tests['Article has "title" property'] = article.hasOwnProperty('title');
  // tests['Article has "slug" property'] = article.hasOwnProperty('slug');
  // tests['Article has "body" property'] = article.hasOwnProperty('body');
  // tests['Article has "createdAt" property'] = article.hasOwnProperty('createdAt');
  // tests['Article\'s "createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.createdAt);
  // tests['Article has "updatedAt" property'] = article.hasOwnProperty('updatedAt');
  // tests['Article\'s "updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(article.updatedAt);
  // tests['Article has "description" property'] = article.hasOwnProperty('description');
  // tests['Article has "tagList" property'] = article.hasOwnProperty('tagList');
  // tests['Article\'s "tagList" property is an Array'] = Array.isArray(article.tagList);
  // tests['Article has "author" property'] = article.hasOwnProperty('author');
  // tests['Article has "favorited" property'] = article.hasOwnProperty('favorited');
  // tests['Article has "favoritesCount" property'] = article.hasOwnProperty('favoritesCount');
  // tests['favoritesCount is an integer'] = Number.isInteger(article.favoritesCount);
  // tests["Article's \"favorited\" property is false"] = article.favorited === false;
  //
%}

###
# group: Articles, Favorite, Comments
# @name Create Comment for Article
POST {{APIURL}}/articles/{{slug}}/comments
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{
  "comment": {
    "body": "Thank you so much!"
  }
}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "comment" property'] = responseJSON.hasOwnProperty('comment');
  //
  // var comment = responseJSON.comment || {};
  //
  // tests['Comment has "id" property'] = comment.hasOwnProperty('id');
  // pm.globals.set('commentId', comment.id);
  //
  // tests['Comment has "body" property'] = comment.hasOwnProperty('body');
  // tests['Comment has "createdAt" property'] = comment.hasOwnProperty('createdAt');
  // tests['"createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.createdAt);
  // tests['Comment has "updatedAt" property'] = comment.hasOwnProperty('updatedAt');
  // tests['"updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.updatedAt);
  // tests['Comment has "author" property'] = comment.hasOwnProperty('author');
  //
%}

###
# group: Articles, Favorite, Comments
# @name All Comments for Article
GET {{APIURL}}/articles/{{slug}}/comments
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "comments" property'] = responseJSON.hasOwnProperty('comments');
  //
  //     if(responseJSON.comments.length){
  //         var comment = responseJSON.comments[0];
  //
  //         tests['Comment has "id" property'] = comment.hasOwnProperty('id');
  //         tests['Comment has "body" property'] = comment.hasOwnProperty('body');
  //         tests['Comment has "createdAt" property'] = comment.hasOwnProperty('createdAt');
  //         tests['"createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.createdAt);
  //         tests['Comment has "updatedAt" property'] = comment.hasOwnProperty('updatedAt');
  //         tests['"updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.updatedAt);
  //         tests['Comment has "author" property'] = comment.hasOwnProperty('author');
  //     }
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name All Comments for Article without login
GET {{APIURL}}/articles/{{slug}}/comments
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "comments" property'] = responseJSON.hasOwnProperty('comments');
  //
  //     if(responseJSON.comments.length){
  //         var comment = responseJSON.comments[0];
  //
  //         tests['Comment has "id" property'] = comment.hasOwnProperty('id');
  //         tests['Comment has "body" property'] = comment.hasOwnProperty('body');
  //         tests['Comment has "createdAt" property'] = comment.hasOwnProperty('createdAt');
  //         tests['"createdAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.createdAt);
  //         tests['Comment has "updatedAt" property'] = comment.hasOwnProperty('updatedAt');
  //         tests['"updatedAt" property is an ISO 8601 timestamp'] = /^\d{4,}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d.\d+(?:[+-][0-2]\d:[0-5]\d|Z)$/.test(comment.updatedAt);
  //         tests['Comment has "author" property'] = comment.hasOwnProperty('author');
  //     }
  // }
  //
%}

###
# group: Articles, Favorite, Comments
# @name Delete Comment for Article
DELETE {{APIURL}}/articles/{{slug}}/comments/{{commentId}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

###
# group: Articles, Favorite, Comments
# @name Delete Article
DELETE {{APIURL}}/articles/{{slug}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

###
# group: Profiles
# @name Register Celeb
POST {{APIURL}}/users
Content-Type: application/json
X-Requested-With: XMLHttpRequest

{"user":{"email":"celeb_{{EMAIL}}", "password":"{{PASSWORD}}", "username":"celeb_{{USERNAME}}"}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // if (!(environment.isIntegrationTest)) {
  // var responseJSON = JSON.parse(responseBody);
  //
  // tests['Response contains "user" property'] = responseJSON.hasOwnProperty('user');
  //
  // var user = responseJSON.user || {};
  //
  // tests['User has "email" property'] = user.hasOwnProperty('email');
  // tests['User has "username" property'] = user.hasOwnProperty('username');
  // tests['User has "bio" property'] = user.hasOwnProperty('bio');
  // tests['User has "image" property'] = user.hasOwnProperty('image');
  // tests['User has "token" property'] = user.hasOwnProperty('token');
  // }
  //
%}

###
# group: Profiles
# @name Profile
GET {{APIURL}}/profiles/celeb_{{USERNAME}}
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // if (!(environment.isIntegrationTest)) {
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "profile" property'] = responseJSON.hasOwnProperty('profile');
  //
  //     var profile = responseJSON.profile || {};
  //
  //     tests['Profile has "username" property'] = profile.hasOwnProperty('username');
  //     tests['Profile has "bio" property'] = profile.hasOwnProperty('bio');
  //     tests['Profile has "image" property'] = profile.hasOwnProperty('image');
  //     tests['Profile has "following" property'] = profile.hasOwnProperty('following');
  // }
  // }
  //
%}

###
# group: Profiles
# @name Follow Profile
POST {{APIURL}}/profiles/celeb_{{USERNAME}}/follow
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

{"user":{"email":"{{EMAIL}}"}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // if (!(environment.isIntegrationTest)) {
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "profile" property'] = responseJSON.hasOwnProperty('profile');
  //
  //     var profile = responseJSON.profile || {};
  //
  //     tests['Profile has "username" property'] = profile.hasOwnProperty('username');
  //     tests['Profile has "bio" property'] = profile.hasOwnProperty('bio');
  //     tests['Profile has "image" property'] = profile.hasOwnProperty('image');
  //     tests['Profile has "following" property'] = profile.hasOwnProperty('following');
  //     tests['Profile\'s "following" property is true'] = profile.following === true;
  // }
  // }
  //
%}

###
# group: Profiles
# @name Unfollow Profile
DELETE {{APIURL}}/profiles/celeb_{{USERNAME}}/follow
Content-Type: application/json
X-Requested-With: XMLHttpRequest
Authorization: Token {{token}}

> {%
  // TODO: migrate to HTTP Client Response handler API
  // if (!(environment.isIntegrationTest)) {
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "profile" property'] = responseJSON.hasOwnProperty('profile');
  //
  //     var profile = responseJSON.profile || {};
  //
  //     tests['Profile has "username" property'] = profile.hasOwnProperty('username');
  //     tests['Profile has "bio" property'] = profile.hasOwnProperty('bio');
  //     tests['Profile has "image" property'] = profile.hasOwnProperty('image');
  //     tests['Profile has "following" property'] = profile.hasOwnProperty('following');
  //     tests['Profile\'s "following" property is false'] = profile.following === false;
  // }
  // }
  //
%}

###
# group: Tags
# @name All Tags
GET {{APIURL}}/tags
Content-Type: application/json
X-Requested-With: XMLHttpRequest

> {%
  // TODO: migrate to HTTP Client Response handler API
  // var is200Response = responseCode.code === 200;
  //
  // tests['Response code is 200 OK'] = is200Response;
  //
  // if(is200Response){
  //     var responseJSON = JSON.parse(responseBody);
  //
  //     tests['Response contains "tags" property'] = responseJSON.hasOwnProperty('tags');
  //     tests['"tags" property returned as array'] = Array.isArray(responseJSON.tags);
  // }
  //
%}